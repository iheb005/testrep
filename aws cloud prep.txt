****Module1:Intro****
What is cloud computing?
On-demand delivery of IT resources and applications through the internet with pay-as-you-go pricing

***Deployment models for cloud computing***

* cloud-based deployment
- Run all parts of the application in the cloud.
- Migrate existing applications to the cloud.
- Design and build new applications in the cloud.

* on premises deployment/private cloud deployment:
- Deploy resources by using virtualization and resource management tools.
- Increase resource utilization by using application management and virtualization technologies.

* Hybrid deployment
- Connect cloud-based resources to on-premises infrastructure.
- Integrate cloud-based resources with legacy IT applications.

**cloud benefits

-speed, agility, stop wasting money on physical data centers and their maintenance, no need to predict the infrastructure capacity you will need before deployment of app, global deployment of apps to customers around the world...


**** Module2:EC2 Elastic compute cloud ****

- multitenancy: sharing underlying hardware between virtual machines
- vertical scaling: resize the instance depending on your app requirements(memory, number of CPUs) 
- save costs by paying only for server capacity and time when an instance is running( u can stop the instance when it is stopped or temrinated)

**how EC2 works ? 
1/launch(specify the OS , apps, hardware configuration, security settings to control the network traffic for your instance)
2/ connect (log in)
3/ use your instance by running cmds to install software, storen copy files...

** EC2 instance types:
-General purpose instances:
balance of compute, memory, and networking res (app servers, gaming servers, backend servers for entreprise app, small and medium DB)

-compute optimized instances:
used for apps that benefit from high performance processors (dedicated gaming servers, high-performance web servers, batch processing with many transactions in one group)

- Memory optimized instances:
designed for workloads that have large datasets in memory and for high performance databases

-acclerated computing instances:
use hardware accelerators, coprocessors to perform some funcs more efficently(graphics processing, data pattern matching

-storage optimized instances:
designed for workloads that require high sequential read/write access to large datasets on locat storage(data warehousing apps, high freq online transaction processing system)

** EC2 Pricing:
-On-Demand:
ideal for short term, irregular workloads that can't be interrupted, you only pay for the compute time you use the instances

-saving plans:
commitment to a consistent amount of compute usage for 1-3 year term, helps saving up to 72% on your AWS compute usage regardles the OS, tenancy, region...

-reserved instances:
designed for steady state workloads or those with predictble usage. 75% discount applied to on-demand instances

-spot instances
ideal for workloads with flexible start and ent times(reclaim instance at anytime u want) , or withstand interruptions.
spare EC2 computing capacity for 90% of the on-demand price.
no need for commitment or contract to a consistent amount of compute usage.

-dedicated hosts:
physical servers with amazon EC2 instance capacity dedicated to your use

**EC2 Scalability and elasticity:
scalability means that your architecture automatically respond to the changing demand by adding/reducing the res (you pay only for what u use)
the AWS service used for autoscaling is Amazon EC2 Auto Scaling, it enables you to add/remove EC2 instances in response to changing apps demand
there are 2 approaches of Amazon EC2 auto scaling:
-dynamic scaling responds to changing demand
- predective scaling: auto schedules the right num of amazon EC2 instances based on predicted demand.

after adding amazon EC2 auto scaling to your app, u can add new instances to the app and terminate them when u don't need them
auto scaling group helps to set the min number of instances(min number of instances is the number of EC2 instances launched immediately after creating the auto scaling group)

**Directing traffic with elastic load balancing









